name: Example Matrix Usage

on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Network to test'
        required: true
        type: choice
        options:
          - fusaka-devnet-1
          - mainnet
          - sepolia
          - hoodi
        default: 'fusaka-devnet-1'
      
      el_client:
        description: 'Execution layer client'
        required: true
        type: choice
        options:
          - geth
          - nethermind
          - reth
          - besu
          - erigon
        default: 'geth'
      
      cl_clients:
        description: 'Space or comma-separated list of CL clients (e.g., "lighthouse teku" or "lighthouse,teku,prysm")'
        required: true
        type: string
        default: 'lighthouse teku'

jobs:
  # Parse input and create matrix
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Create matrix from CL clients input
        id: set-matrix
        run: |
          # Handle both comma and space separated inputs
          CL_CLIENTS="${{ github.event.inputs.cl_clients }}"
          CL_CLIENTS="${CL_CLIENTS//,/ }"  # Replace commas with spaces
          
          # Build JSON array
          MATRIX='{"cl_client":['
          FIRST=true
          
          for client in $CL_CLIENTS; do
            # Validate client name
            if [[ "$client" =~ ^(lighthouse|teku|prysm|nimbus|lodestar|grandine)$ ]]; then
              if [ "$FIRST" = true ]; then
                FIRST=false
              else
                MATRIX+=','
              fi
              MATRIX+="\"$client\""
            else
              echo "::warning::Skipping invalid client: $client"
            fi
          done
          
          MATRIX+=']}'
          
          echo "Generated matrix: $MATRIX"
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  # Run tests using the matrix
  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Run sync test
        uses: ./
        with:
          network: ${{ github.event.inputs.network }}
          el_client: ${{ github.event.inputs.el_client }}
          cl_client: ${{ matrix.cl_client }}
          enclave_name: test-${{ github.event.inputs.network }}-${{ github.event.inputs.el_client }}-${{ matrix.cl_client }}-${{ github.run_number }}
      
      - name: Summary
        run: |
          echo "Tested ${{ matrix.cl_client }} with ${{ github.event.inputs.el_client }} on ${{ github.event.inputs.network }}"